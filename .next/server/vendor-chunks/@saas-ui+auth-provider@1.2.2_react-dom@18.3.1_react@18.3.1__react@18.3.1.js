"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@saas-ui+auth-provider@1.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1";
exports.ids = ["vendor-chunks/@saas-ui+auth-provider@1.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@saas-ui+auth-provider@1.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@saas-ui/auth-provider/dist/index.mjs":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@saas-ui+auth-provider@1.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@saas-ui/auth-provider/dist/index.mjs ***!
  \********************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthContext: () => (/* binding */ AuthContext),\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth),\n/* harmony export */   useCurrentUser: () => (/* binding */ useCurrentUser),\n/* harmony export */   useLogin: () => (/* binding */ useLogin),\n/* harmony export */   useOtp: () => (/* binding */ useOtp),\n/* harmony export */   useResetPassword: () => (/* binding */ useResetPassword),\n/* harmony export */   useSignUp: () => (/* binding */ useSignUp),\n/* harmony export */   useUpdatePassword: () => (/* binding */ useUpdatePassword)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.23_@babel+core@7.26.7_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/.pnpm/next@14.2.23_@babel+core@7.26.7_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ AuthContext,AuthProvider,useAuth,useCurrentUser,useLogin,useOtp,useResetPassword,useSignUp,useUpdatePassword auto */ // src/provider.tsx\n\n// src/use-promise.ts\n\nfunction usePromise(fn) {\n    const [isLoading, setLoading] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [isResolved, setResolved] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [isRejected, setRejected] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n    const [error, setError] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const [data, setData] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const call = (...params)=>{\n        setLoading(true);\n        return fn(...params).then((data2)=>{\n            setData(data2);\n            setResolved(true);\n            setLoading(false);\n            return data2;\n        }).catch((err)=>{\n            setError(err);\n            setRejected(true);\n            setLoading(false);\n            throw err;\n        });\n    };\n    return [\n        {\n            error,\n            data,\n            isLoading,\n            isResolved,\n            isRejected\n        },\n        call\n    ];\n}\n// src/provider.tsx\n\nvar createAuthContext = ()=>{\n    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\n};\nvar AuthContext = createAuthContext();\nvar AuthProvider = ({ refetchUserOnWindowFocus = true, onRestoreAuthState, onLoadUser = ()=>Promise.resolve(null), onSignup = ()=>Promise.resolve(null), onLogin = ()=>Promise.resolve(null), onVerifyOtp = ()=>Promise.resolve(null), onLogout = ()=>Promise.resolve(), onAuthStateChange, onGetToken, onResetPassword, onUpdatePassword, children })=>{\n    const [isAuthenticated, setAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n    const [isLoading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const restoreRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    const isFetchingRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (onAuthStateChange) {\n            const unsubscribe = onAuthStateChange((user2)=>{\n                setAuthenticated(!!user2);\n            });\n            return ()=>{\n                unsubscribe == null ? void 0 : unsubscribe();\n            };\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const restoreState = async ()=>{\n            restoreRef.current = true;\n            await (onRestoreAuthState == null ? void 0 : onRestoreAuthState());\n            await loadUser();\n            restoreRef.current = false;\n        };\n        if (!restoreRef.current) {\n            restoreState();\n        }\n    }, [\n        onRestoreAuthState\n    ]);\n    const loadUser = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        try {\n            if (isFetchingRef.current) {\n                return;\n            }\n            if ((typeof onGetToken === \"undefined\" || await onGetToken()) && !isFetchingRef.current) {\n                isFetchingRef.current = true;\n                const user2 = await onLoadUser();\n                if (user2) {\n                    setUser(user2);\n                    setAuthenticated(true);\n                } else {\n                    setAuthenticated(false);\n                    setUser(null);\n                }\n            }\n        } catch  {\n            setAuthenticated(false);\n            setUser(null);\n        } finally{\n            isFetchingRef.current = false;\n            setLoading(false);\n        }\n    }, [\n        onLoadUser,\n        onGetToken\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!refetchUserOnWindowFocus) {\n            return;\n        }\n        const onWindowFocus = async ()=>{\n            loadUser();\n        };\n        window.addEventListener(\"focus\", onWindowFocus);\n        return ()=>{\n            if (onWindowFocus) {\n                window.removeEventListener(\"focus\", onWindowFocus);\n            }\n        };\n    }, [\n        loadUser,\n        refetchUserOnWindowFocus\n    ]);\n    const signUp = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (params, options)=>{\n        const result = await onSignup(params, options);\n        loadUser();\n        return result;\n    }, [\n        onSignup\n    ]);\n    const logIn = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (params, options)=>{\n        const result = await onLogin(params, options);\n        loadUser();\n        return result;\n    }, [\n        onLogin\n    ]);\n    const logOut = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (options)=>{\n        await onLogout(options);\n        setUser(null);\n        setAuthenticated(false);\n    }, [\n        onLogout\n    ]);\n    const verifyOtp = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (params, options)=>{\n        const result = await onVerifyOtp(params, options);\n        return result;\n    }, [\n        onVerifyOtp\n    ]);\n    const resetPassword = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (params, options)=>{\n        return await (onResetPassword == null ? void 0 : onResetPassword(params, options));\n    }, [\n        onResetPassword\n    ]);\n    const updatePassword = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (params, options)=>{\n        return await (onUpdatePassword == null ? void 0 : onUpdatePassword(params, options));\n    }, [\n        onUpdatePassword\n    ]);\n    const getToken = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        return onGetToken == null ? void 0 : onGetToken();\n    }, [\n        onGetToken\n    ]);\n    const value = {\n        isAuthenticated,\n        isLoggingIn: isAuthenticated && !user,\n        isLoading,\n        user,\n        signUp,\n        logIn,\n        logOut,\n        verifyOtp,\n        loadUser,\n        getToken,\n        resetPassword,\n        updatePassword\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(AuthContext.Provider, {\n        value,\n        children\n    });\n};\nvar useAuth = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AuthContext);\n    if (context === null) {\n        throw new Error(\"Auth context missing, did you forget to wrap your app in AuthProvider?\");\n    }\n    return context;\n};\nvar useCurrentUser = ()=>{\n    return useAuth().user;\n};\nvar useLogin = ({ action = \"logIn\" } = {})=>{\n    const auth = useAuth();\n    const fn = auth[action] || auth[\"logIn\"];\n    return usePromise(fn);\n};\nvar useSignUp = ()=>{\n    const { signUp } = useAuth();\n    return usePromise(signUp);\n};\nvar useOtp = ()=>{\n    const { verifyOtp } = useAuth();\n    return usePromise(verifyOtp);\n};\nvar useResetPassword = ()=>{\n    const { resetPassword } = useAuth();\n    return usePromise(resetPassword);\n};\nvar useUpdatePassword = ()=>{\n    const { updatePassword } = useAuth();\n    return usePromise(updatePassword);\n};\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNhYXMtdWkrYXV0aC1wcm92aWRlckAxLjIuMl9yZWFjdC1kb21AMTguMy4xX3JlYWN0QDE4LjMuMV9fcmVhY3RAMTguMy4xL25vZGVfbW9kdWxlcy9Ac2Fhcy11aS9hdXRoLXByb3ZpZGVyL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQU1POztBQ05nQjtBQWVoQixTQUFTTSxXQUFpQ0MsRUFBQTtJQUMvQyxNQUFNLENBQUNDLFdBQVdDLFdBQVUsR0FBVVQsMkNBQUEsQ0FBUztJQUMvQyxNQUFNLENBQUNVLFlBQVlDLFlBQVcsR0FBVVgsMkNBQUEsQ0FBUztJQUNqRCxNQUFNLENBQUNZLFlBQVlDLFlBQVcsR0FBVWIsMkNBQUEsQ0FBUztJQUNqRCxNQUFNLENBQUNjLE9BQU9DLFNBQVEsR0FBVWYsMkNBQUEsQ0FBUztJQUN6QyxNQUFNLENBQUNnQixNQUFNQyxRQUFPLEdBQVVqQiwyQ0FBQSxDQUFTO0lBRXZDLE1BQU1rQixPQUFZLElBQUlDO1FBQ3BCVixXQUFXO1FBRVgsT0FBT0YsTUFBTVksUUFDVkMsSUFBQSxDQUFLLENBQUNKO1lBQ0xDLFFBQVFEO1lBQ1JMLFlBQVk7WUFDWkYsV0FBVztZQUVYLE9BQU9PO1FBQ1QsR0FDQ0ssS0FBQSxDQUFNLENBQUNDO1lBQ05QLFNBQVNPO1lBQ1RULFlBQVk7WUFDWkosV0FBVztZQUVYLE1BQU1hO1FBQ1I7SUFDSjtJQUVBLE9BQU87UUFBQztZQUFFUjtZQUFPRTtZQUFNUjtZQUFXRTtZQUFZRTtRQUFXO1FBQUdNO0tBQUk7QUFDbEU7O0FEK1JTO0FBN0tULElBQU1NLG9CQUFvQjtJQUN4QixxQkFBT3ZCLG9EQUFhQSxDQUFpQztBQUN2RDtBQUVPLElBQU13QixjQUFjRDtBQUVwQixJQUFNRSxlQUFlLENBQW1DLEVBQzdEQywyQkFBMkIsTUFDM0JDLGtCQUFBLEVBQ0FDLGFBQWEsSUFBTUMsUUFBUUMsT0FBQSxDQUFRLEtBQUksRUFD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QztBQUVPLElBQU1vRSxZQUFZO0lBQ3ZCLE1BQU0sRUFBRW5CLE1BQUEsRUFBTyxHQUFJWTtJQUNuQixPQUFPOUQsV0FBV2tEO0FBQ3BCO0FBRU8sSUFBTW9CLFNBQVM7SUFDcEIsTUFBTSxFQUFFZixTQUFBLEVBQVUsR0FBSU87SUFDdEIsT0FBTzlELFdBQVd1RDtBQUNwQjtBQUVPLElBQU1nQixtQkFBbUI7SUFDOUIsTUFBTSxFQUFFZixhQUFBLEVBQWMsR0FBSU07SUFDMUIsT0FBTzlELFdBQVd3RDtBQUNwQjtBQUVPLElBQU1nQixvQkFBb0I7SUFDL0IsTUFBTSxFQUFFZixjQUFBLEVBQWUsR0FBSUs7SUFDM0IsT0FBTzlELFdBQVd5RDtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhYXMtdWktbmV4dGpzLWxhbmRpbmctcGFnZS8uLi9zcmMvcHJvdmlkZXIudHN4PzQ4NDkiLCJ3ZWJwYWNrOi8vc2Fhcy11aS1uZXh0anMtbGFuZGluZy1wYWdlLy4uL3NyYy91c2UtcHJvbWlzZS50cz8xMDQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge1xuICBjcmVhdGVDb250ZXh0LFxuICB1c2VTdGF0ZSxcbiAgdXNlQ29udGV4dCxcbiAgdXNlRWZmZWN0LFxuICB1c2VDYWxsYmFjayxcbn0gZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IHVzZVByb21pc2UgfSBmcm9tICcuL3VzZS1wcm9taXNlJ1xuXG5leHBvcnQgdHlwZSBBdXRoVHlwZUVudW0gPSAnbWFnaWNsaW5rJyB8ICdwYXNzd29yZCdcblxuZXhwb3J0IHR5cGUgQXV0aEFjdGlvbkVudW0gPSAnbG9nSW4nIHwgJ3NpZ25VcCdcblxuZXhwb3J0IHR5cGUgQXV0aFRva2VuID0gc3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZFxuXG5leHBvcnQgaW50ZXJmYWNlIEF1dGhQYXJhbXMge1xuICBlbWFpbD86IHN0cmluZ1xuICBwYXNzd29yZD86IHN0cmluZ1xuICBwcm92aWRlcj86IHN0cmluZ1xuICByZWZyZXNoVG9rZW4/OiBzdHJpbmdcbiAgb3RwPzogc3RyaW5nXG4gIFtrZXk6IHN0cmluZ106IGFueVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlc2V0UGFzc3dvcmRQYXJhbXMge1xuICBlbWFpbDogc3RyaW5nXG4gIFtrZXk6IHN0cmluZ106IGFueVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFVwZGF0ZVBhc3N3b3JkUGFyYW1zIHtcbiAgcGFzc3dvcmQ6IHN0cmluZ1xuICB0b2tlbj86IHN0cmluZ1xuICBba2V5OiBzdHJpbmddOiBhbnlcbn1cblxuZXhwb3J0IGludGVyZmFjZSBPdHBQYXJhbXMge1xuICBvdHA6IHN0cmluZ1xuICBba2V5OiBzdHJpbmddOiBhbnlcbn1cblxuZXhwb3J0IHR5cGUgRXh0cmFBdXRoT3B0aW9ucyA9IFJlY29yZDxzdHJpbmcsIHVua25vd24+XG5leHBvcnQgdHlwZSBBdXRoT3B0aW9uczxFeHRyYU9wdGlvbnMgZXh0ZW5kcyBvYmplY3QgPSBFeHRyYUF1dGhPcHRpb25zPiA9IHtcbiAgLyoqXG4gICAqIFRoZSB1cmwgdG8gcmVkaXJlY3QgdG8gYWZ0ZXIgc29jaWFsIG9yIG1hZ2ljIGxpbmsgbG9naW4uXG4gICAqL1xuICByZWRpcmVjdFRvPzogc3RyaW5nXG59ICYgRXh0cmFPcHRpb25zXG5cbi8qKlxuICogVGhlIHVzZXIgb2JqZWN0XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVXNlciB7XG4gIFtrZXk6IHN0cmluZ106IGFueVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIERlZmF1bHRVc2VyIGV4dGVuZHMgVXNlciB7XG4gIGlkPzogc3RyaW5nIHwgbnVsbFxuICBlbWFpbD86IHN0cmluZyB8IG51bGxcbn1cblxudHlwZSBVbnN1YnNjcmliZUhhbmRsZXIgPSAoKSA9PiB2b2lkXG5cbmV4cG9ydCB0eXBlIEF1dGhTdGF0ZUNoYW5nZUNhbGxiYWNrPFRVc2VyIGV4dGVuZHMgVXNlciA9IERlZmF1bHRVc2VyPiA9IChcbiAgdXNlcj86IFRVc2VyIHwgbnVsbFxuKSA9PiB2b2lkXG5cbmV4cG9ydCBpbnRlcmZhY2UgQXV0aFByb3ZpZGVyUHJvcHM8VFVzZXIgZXh0ZW5kcyBVc2VyID0gRGVmYXVsdFVzZXI+IHtcbiAgLyoqXG4gICAqIFJlZmV0Y2ggdGhlIHVzZXIgZGF0YSB3aGVuIHRoZSB3aW5kb3cgcmVnYWlucyBmb2N1c1xuICAgKi9cbiAgcmVmZXRjaFVzZXJPbldpbmRvd0ZvY3VzPzogYm9vbGVhblxuICAvKipcbiAgICogUmVzdG9yZSB0aGUgYXV0aGVudGljYXRpb24gc3RhdGUsIGVnIGFmdGVyIHJlZGlyZWN0aW5nXG4gICAqL1xuICBvblJlc3RvcmVBdXRoU3RhdGU/OiAoKSA9PiBQcm9taXNlPHZvaWQ+XG4gIC8qKlxuICAgKiBMb2FkcyB1c2VyIGRhdGEgYWZ0ZXIgYXV0aGVudGljYXRpb25cbiAgICovXG4gIG9uTG9hZFVzZXI/OiAoKSA9PiBQcm9taXNlPFRVc2VyIHwgbnVsbD5cbiAgLyoqXG4gICAqIFRoZSBzaWdudXAgbWV0aG9kXG4gICAqL1xuICBvblNpZ251cD86IDxQYXJhbXMgZXh0ZW5kcyBBdXRoUGFyYW1zID0gQXV0aFBhcmFtcz4oXG4gICAgcGFyYW1zOiBQYXJhbXMsXG4gICAgb3B0aW9ucz86IEF1dGhPcHRpb25zXG4gICkgPT4gUHJvbWlzZTxUVXNlciB8IHVuZGVmaW5lZCB8IG51bGw+XG4gIC8qKlxuICAgKiBUaGUgbG9naW4gbWV0aG9kXG4gICAqL1xuICBvbkxvZ2luPzogPFBhcmFtcyBleHRlbmRzIEF1dGhQYXJhbXMgPSBBdXRoUGFyYW1zPihcbiAgICBwYXJhbXM6IFBhcmFtcyxcbiAgICBvcHRpb25zPzogQXV0aE9wdGlvbnNcbiAgKSA9PiBQcm9taXNlPFRVc2VyIHwgdW5kZWZpbmVkIHwgbnVsbD5cbiAgLyoqXG4gICAqIFJlcXVlc3QgdG8gcmVzZXQgYSBwYXNzd29yZC5cbiAgICovXG4gIG9uUmVzZXRQYXNzd29yZD86IDxQYXJhbXMgZXh0ZW5kcyBSZXNldFBhc3N3b3JkUGFyYW1zID0gUmVzZXRQYXNzd29yZFBhcmFtcz4oXG4gICAgcGFyYW1zOiBQYXJhbXMsXG4gICAgb3B0aW9ucz86IEF1dGhPcHRpb25zXG4gICkgPT4gUHJvbWlzZTxhbnk+XG4gIC8qKlxuICAgKiBVcGRhdGUgdGhlIHBhc3N3b3JkLlxuICAgKi9cbiAgb25VcGRhdGVQYXNzd29yZD86IDxcbiAgICBQYXJhbXMgZXh0ZW5kcyBVcGRhdGVQYXNzd29yZFBhcmFtcyA9IFVwZGF0ZVBhc3N3b3JkUGFyYW1zLFxuICA+KFxuICAgIHBhcmFtczogUGFyYW1zLFxuICAgIG9wdGlvbnM/OiBBdXRoT3B0aW9uc1xuICApID0+IFByb21pc2U8YW55PlxuICAvKipcbiAgICogVmVyaWZ5IGFuIG9uZSB0aW1lIHBhc3N3b3JkICgyZmEpXG4gICAqL1xuICBvblZlcmlmeU90cD86IDxQYXJhbXMgZXh0ZW5kcyBPdHBQYXJhbXMgPSBPdHBQYXJhbXM+KFxuICAgIHBhcmFtczogUGFyYW1zLFxuICAgIG9wdGlvbnM/OiBBdXRoT3B0aW9uc1xuICApID0+IFByb21pc2U8Ym9vbGVhbiB8IHVuZGVmaW5lZCB8IG51bGw+XG4gIC8qKlxuICAgKiBUaGUgbG9nb3V0IG1ldGhvZFxuICAgKi9cbiAgb25Mb2dvdXQ/OiAob3B0aW9ucz86IEF1dGhPcHRpb25zKSA9PiBQcm9taXNlPHVua25vd24+XG4gIC8qKlxuICAgKiBTaG91bGQgdHJpZ2dlciB3aGVuZXZlciB0aGUgYXV0aGVudGljYXRpb24gc3RhdGUgY2hhbmdlc1xuICAgKi9cbiAgb25BdXRoU3RhdGVDaGFuZ2U/OiAoXG4gICAgY2FsbGJhY2s6IEF1dGhTdGF0ZUNoYW5nZUNhbGxiYWNrPFRVc2VyPlxuICApID0+IFVuc3Vic2NyaWJlSGFuZGxlclxuICAvKipcbiAgICogUmV0dXJuIHRoZSBzZXNzaW9uIHRva2VuXG4gICAqL1xuICBvbkdldFRva2VuPzogKCkgPT4gUHJvbWlzZTxBdXRoVG9rZW4+XG4gIC8qKlxuICAgKiBUaGUgY2hpbGRyZW4gdG8gcmVuZGVyXG4gICAqL1xuICBjaGlsZHJlbj86IFJlYWN0LlJlYWN0Tm9kZVxufVxuXG5leHBvcnQgdHlwZSBBdXRoRnVuY3Rpb248XG4gIFRQYXJhbXMgPSBBdXRoUGFyYW1zLFxuICBURXh0cmFPcHRpb25zIGV4dGVuZHMgb2JqZWN0ID0gUmVjb3JkPHN0cmluZywgdW5rbm93bj4sXG4+ID0gKHBhcmFtczogVFBhcmFtcywgb3B0aW9ucz86IEF1dGhPcHRpb25zPFRFeHRyYU9wdGlvbnM+KSA9PiBQcm9taXNlPGFueT5cblxuZXhwb3J0IGludGVyZmFjZSBBdXRoQ29udGV4dFZhbHVlPFRVc2VyIGV4dGVuZHMgVXNlciA9IERlZmF1bHRVc2VyPiB7XG4gIGlzQXV0aGVudGljYXRlZDogYm9vbGVhblxuICBpc0xvZ2dpbmdJbjogYm9vbGVhblxuICBpc0xvYWRpbmc6IGJvb2xlYW5cbiAgdXNlcj86IFRVc2VyIHwgbnVsbFxuICBzaWduVXA6IEF1dGhGdW5jdGlvblxuICBsb2dJbjogQXV0aEZ1bmN0aW9uXG4gIHZlcmlmeU90cDogQXV0aEZ1bmN0aW9uPE90cFBhcmFtcz5cbiAgcmVzZXRQYXNzd29yZDogQXV0aEZ1bmN0aW9uPFJlc2V0UGFzc3dvcmRQYXJhbXM+XG4gIHVwZGF0ZVBhc3N3b3JkOiBBdXRoRnVuY3Rpb248VXBkYXRlUGFzc3dvcmRQYXJhbXM+XG4gIGxvZ091dDogKG9wdGlvbnM/OiBBdXRoT3B0aW9ucykgPT4gUHJvbWlzZTx1bmtub3duPlxuICBsb2FkVXNlcjogKCkgPT4gdm9pZFxuICBnZXRUb2tlbj86ICgpID0+IFByb21pc2U8QXV0aFRva2VuPlxufVxuXG5jb25zdCBjcmVhdGVBdXRoQ29udGV4dCA9IDxUVXNlciBleHRlbmRzIFVzZXIgPSBEZWZhdWx0VXNlcj4oKSA9PiB7XG4gIHJldHVybiBjcmVhdGVDb250ZXh0PEF1dGhDb250ZXh0VmFsdWU8VFVzZXI+IHwgbnVsbD4obnVsbClcbn1cblxuZXhwb3J0IGNvbnN0IEF1dGhDb250ZXh0ID0gY3JlYXRlQXV0aENvbnRleHQoKVxuXG5leHBvcnQgY29uc3QgQXV0aFByb3ZpZGVyID0gPFRVc2VyIGV4dGVuZHMgVXNlciA9IERlZmF1bHRVc2VyPih7XG4gIHJlZmV0Y2hVc2VyT25XaW5kb3dGb2N1cyA9IHRydWUsXG4gIG9uUmVzdG9yZUF1dGhTdGF0ZSxcbiAgb25Mb2FkVXNlciA9ICgpID0+IFByb21pc2UucmVzb2x2ZShudWxsKSxcbiAgb25TaWdudXAgPSAoKSA9PiBQcm9taXNlLnJlc29sdmUobnVsbCksXG4gIG9uTG9naW4gPSAoKSA9PiBQcm9taXNlLnJlc29sdmUobnVsbCksXG4gIG9uVmVyaWZ5T3RwID0gKCkgPT4gUHJvbWlzZS5yZXNvbHZlKG51bGwpLFxuICBvbkxvZ291dCA9ICgpID0+IFByb21pc2UucmVzb2x2ZSgpLFxuICBvbkF1dGhTdGF0ZUNoYW5nZSxcbiAgb25HZXRUb2tlbixcbiAgb25SZXNldFBhc3N3b3JkLFxuICBvblVwZGF0ZVBhc3N3b3JkLFxuICBjaGlsZHJlbixcbn06IEF1dGhQcm92aWRlclByb3BzPFRVc2VyPikgPT4ge1xuICBjb25zdCBbaXNBdXRoZW50aWNhdGVkLCBzZXRBdXRoZW50aWNhdGVkXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbdXNlciwgc2V0VXNlcl0gPSB1c2VTdGF0ZTxUVXNlciB8IG51bGw+KClcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKVxuICBjb25zdCByZXN0b3JlUmVmID0gUmVhY3QudXNlUmVmKGZhbHNlKVxuICBjb25zdCBpc0ZldGNoaW5nUmVmID0gUmVhY3QudXNlUmVmKGZhbHNlKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKG9uQXV0aFN0YXRlQ2hhbmdlKSB7XG4gICAgICBjb25zdCB1bnN1YnNjcmliZSA9IG9uQXV0aFN0YXRlQ2hhbmdlKCh1c2VyKSA9PiB7XG4gICAgICAgIHNldEF1dGhlbnRpY2F0ZWQoISF1c2VyKVxuICAgICAgfSlcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIHVuc3Vic2NyaWJlPy4oKVxuICAgICAgfVxuICAgIH1cbiAgfSwgW10pXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCByZXN0b3JlU3RhdGUgPSBhc3luYyAoKSA9PiB7XG4gICAgICByZXN0b3JlUmVmLmN1cnJlbnQgPSB0cnVlXG4gICAgICBhd2FpdCBvblJlc3RvcmVBdXRoU3RhdGU/LigpXG4gICAgICBhd2FpdCBsb2FkVXNlcigpXG4gICAgICByZXN0b3JlUmVmLmN1cnJlbnQgPSBmYWxzZVxuICAgIH1cblxuICAgIGlmICghcmVzdG9yZVJlZi5jdXJyZW50KSB7XG4gICAgICByZXN0b3JlU3RhdGUoKVxuICAgIH1cbiAgfSwgW29uUmVzdG9yZUF1dGhTdGF0ZV0pXG5cbiAgY29uc3QgbG9hZFVzZXIgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIFByZXZlbnQgbXVsdGlwbGUgY2FsbHMgdG8gbG9hZFVzZXJcbiAgICAgIGlmIChpc0ZldGNoaW5nUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGlmIChcbiAgICAgICAgKHR5cGVvZiBvbkdldFRva2VuID09PSAndW5kZWZpbmVkJyB8fCAoYXdhaXQgb25HZXRUb2tlbigpKSkgJiZcbiAgICAgICAgIWlzRmV0Y2hpbmdSZWYuY3VycmVudFxuICAgICAgKSB7XG4gICAgICAgIGlzRmV0Y2hpbmdSZWYuY3VycmVudCA9IHRydWVcbiAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IG9uTG9hZFVzZXIoKVxuXG4gICAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgICAgc2V0VXNlcih1c2VyKVxuICAgICAgICAgIHNldEF1dGhlbnRpY2F0ZWQodHJ1ZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZXRBdXRoZW50aWNhdGVkKGZhbHNlKVxuICAgICAgICAgIHNldFVzZXIobnVsbClcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gY2F0Y2gge1xuICAgICAgc2V0QXV0aGVudGljYXRlZChmYWxzZSlcbiAgICAgIHNldFVzZXIobnVsbClcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaXNGZXRjaGluZ1JlZi5jdXJyZW50ID0gZmFsc2VcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpXG4gICAgfVxuICB9LCBbb25Mb2FkVXNlciwgb25HZXRUb2tlbl0pXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIXJlZmV0Y2hVc2VyT25XaW5kb3dGb2N1cykge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgY29uc3Qgb25XaW5kb3dGb2N1cyA9IGFzeW5jICgpID0+IHtcbiAgICAgIGxvYWRVc2VyKClcbiAgICB9XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCBvbldpbmRvd0ZvY3VzKVxuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGlmIChvbldpbmRvd0ZvY3VzKSB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdmb2N1cycsIG9uV2luZG93Rm9jdXMpXG4gICAgICB9XG4gICAgfVxuICB9LCBbbG9hZFVzZXIsIHJlZmV0Y2hVc2VyT25XaW5kb3dGb2N1c10pXG5cbiAgY29uc3Qgc2lnblVwID0gdXNlQ2FsbGJhY2soXG4gICAgYXN5bmMgKHBhcmFtczogQXV0aFBhcmFtcywgb3B0aW9ucz86IEF1dGhPcHRpb25zKSA9PiB7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBvblNpZ251cChwYXJhbXMsIG9wdGlvbnMpXG4gICAgICBsb2FkVXNlcigpXG4gICAgICByZXR1cm4gcmVzdWx0XG4gICAgfSxcbiAgICBbb25TaWdudXBdXG4gIClcblxuICBjb25zdCBsb2dJbiA9IHVzZUNhbGxiYWNrKFxuICAgIGFzeW5jIChwYXJhbXM6IEF1dGhQYXJhbXMsIG9wdGlvbnM/OiBBdXRoT3B0aW9ucykgPT4ge1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgb25Mb2dpbihwYXJhbXMsIG9wdGlvbnMpXG4gICAgICBsb2FkVXNlcigpXG4gICAgICByZXR1cm4gcmVzdWx0XG4gICAgfSxcbiAgICBbb25Mb2dpbl1cbiAgKVxuXG4gIGNvbnN0IGxvZ091dCA9IHVzZUNhbGxiYWNrKFxuICAgIGFzeW5jIChvcHRpb25zPzogQXV0aE9wdGlvbnMpID0+IHtcbiAgICAgIGF3YWl0IG9uTG9nb3V0KG9wdGlvbnMpXG4gICAgICBzZXRVc2VyKG51bGwpXG4gICAgICBzZXRBdXRoZW50aWNhdGVkKGZhbHNlKVxuICAgIH0sXG4gICAgW29uTG9nb3V0XVxuICApXG5cbiAgY29uc3QgdmVyaWZ5T3RwID0gdXNlQ2FsbGJhY2soXG4gICAgYXN5bmMgKHBhcmFtczogT3RwUGFyYW1zLCBvcHRpb25zPzogQXV0aE9wdGlvbnMpID0+IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG9uVmVyaWZ5T3RwKHBhcmFtcywgb3B0aW9ucylcbiAgICAgIHJldHVybiByZXN1bHRcbiAgICB9LFxuICAgIFtvblZlcmlmeU90cF1cbiAgKVxuXG4gIGNvbnN0IHJlc2V0UGFzc3dvcmQgPSB1c2VDYWxsYmFjayhcbiAgICBhc3luYyAoXG4gICAgICBwYXJhbXM6IFJlcXVpcmVkPFBpY2s8QXV0aFBhcmFtcywgJ2VtYWlsJz4+LFxuICAgICAgb3B0aW9ucz86IEF1dGhPcHRpb25zXG4gICAgKSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgb25SZXNldFBhc3N3b3JkPy4ocGFyYW1zLCBvcHRpb25zKVxuICAgIH0sXG4gICAgW29uUmVzZXRQYXNzd29yZF1cbiAgKVxuXG4gIGNvbnN0IHVwZGF0ZVBhc3N3b3JkID0gdXNlQ2FsbGJhY2soXG4gICAgYXN5bmMgKFxuICAgICAgcGFyYW1zOiBSZXF1aXJlZDxQaWNrPEF1dGhQYXJhbXMsICdwYXNzd29yZCc+PixcbiAgICAgIG9wdGlvbnM/OiBBdXRoT3B0aW9uc1xuICAgICkgPT4ge1xuICAgICAgcmV0dXJuIGF3YWl0IG9uVXBkYXRlUGFzc3dvcmQ/LihwYXJhbXMsIG9wdGlvbnMpXG4gICAgfSxcbiAgICBbb25VcGRhdGVQYXNzd29yZF1cbiAgKVxuXG4gIGNvbnN0IGdldFRva2VuID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIHJldHVybiBvbkdldFRva2VuPy4oKVxuICB9LCBbb25HZXRUb2tlbl0pXG5cbiAgY29uc3QgdmFsdWU6IEF1dGhDb250ZXh0VmFsdWU8VFVzZXI+ID0ge1xuICAgIGlzQXV0aGVudGljYXRlZCxcbiAgICBpc0xvZ2dpbmdJbjogaXNBdXRoZW50aWNhdGVkICYmICF1c2VyLFxuICAgIGlzTG9hZGluZyxcbiAgICB1c2VyLFxuICAgIHNpZ25VcCxcbiAgICBsb2dJbixcbiAgICBsb2dPdXQsXG4gICAgdmVyaWZ5T3RwLFxuICAgIGxvYWRVc2VyLFxuICAgIGdldFRva2VuLFxuICAgIHJlc2V0UGFzc3dvcmQsXG4gICAgdXBkYXRlUGFzc3dvcmQsXG4gIH1cblxuICByZXR1cm4gPEF1dGhDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt2YWx1ZX0+e2NoaWxkcmVufTwvQXV0aENvbnRleHQuUHJvdmlkZXI+XG59XG5cbmV4cG9ydCBjb25zdCB1c2VBdXRoID0gPFxuICBUVXNlciBleHRlbmRzIFVzZXIgPSBEZWZhdWx0VXNlcixcbj4oKTogQXV0aENvbnRleHRWYWx1ZTxUVXNlcj4gPT4ge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChBdXRoQ29udGV4dClcbiAgaWYgKGNvbnRleHQgPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAnQXV0aCBjb250ZXh0IG1pc3NpbmcsIGRpZCB5b3UgZm9yZ2V0IHRvIHdyYXAgeW91ciBhcHAgaW4gQXV0aFByb3ZpZGVyPydcbiAgICApXG4gIH1cblxuICByZXR1cm4gY29udGV4dCBhcyBBdXRoQ29udGV4dFZhbHVlPFRVc2VyPlxufVxuXG5leHBvcnQgY29uc3QgdXNlQ3VycmVudFVzZXIgPSA8VFVzZXIgZXh0ZW5kcyBVc2VyID0gRGVmYXVsdFVzZXI+KCk6XG4gIHwgVFVzZXJcbiAgfCBudWxsXG4gIHwgdW5kZWZpbmVkID0+IHtcbiAgcmV0dXJuIHVzZUF1dGg8VFVzZXI+KCkudXNlclxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFVzZUxvZ2luUHJvcHMge1xuICBhY3Rpb24/OiBBdXRoQWN0aW9uRW51bVxufVxuXG5leHBvcnQgY29uc3QgdXNlTG9naW4gPSAoeyBhY3Rpb24gPSAnbG9nSW4nIH06IFVzZUxvZ2luUHJvcHMgPSB7fSkgPT4ge1xuICBjb25zdCBhdXRoID0gdXNlQXV0aCgpXG4gIGNvbnN0IGZuID0gYXV0aFthY3Rpb25dIHx8IGF1dGhbJ2xvZ0luJ11cbiAgcmV0dXJuIHVzZVByb21pc2U8QXV0aEZ1bmN0aW9uPihmbilcbn1cblxuZXhwb3J0IGNvbnN0IHVzZVNpZ25VcCA9ICgpID0+IHtcbiAgY29uc3QgeyBzaWduVXAgfSA9IHVzZUF1dGgoKVxuICByZXR1cm4gdXNlUHJvbWlzZShzaWduVXApXG59XG5cbmV4cG9ydCBjb25zdCB1c2VPdHAgPSAoKSA9PiB7XG4gIGNvbnN0IHsgdmVyaWZ5T3RwIH0gPSB1c2VBdXRoKClcbiAgcmV0dXJuIHVzZVByb21pc2UodmVyaWZ5T3RwKVxufVxuXG5leHBvcnQgY29uc3QgdXNlUmVzZXRQYXNzd29yZCA9ICgpID0+IHtcbiAgY29uc3QgeyByZXNldFBhc3N3b3JkIH0gPSB1c2VBdXRoKClcbiAgcmV0dXJuIHVzZVByb21pc2UocmVzZXRQYXNzd29yZClcbn1cblxuZXhwb3J0IGNvbnN0IHVzZVVwZGF0ZVBhc3N3b3JkID0gKCkgPT4ge1xuICBjb25zdCB7IHVwZGF0ZVBhc3N3b3JkIH0gPSB1c2VBdXRoKClcbiAgcmV0dXJuIHVzZVByb21pc2UodXBkYXRlUGFzc3dvcmQpXG59XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCdcblxuZXhwb3J0IGludGVyZmFjZSBVc2VQcm9taXNlIHtcbiAgZXJyb3I/OiBFcnJvciB8IG51bGxcbiAgZGF0YT86IGFueVxuICBpc0xvYWRpbmc6IGJvb2xlYW5cbiAgaXNSZXNvbHZlZDogYm9vbGVhblxuICBpc1JlamVjdGVkOiBib29sZWFuXG59XG5cbnR5cGUgQ2FsbGJhY2tGbiA9ICguLi5hcmdzOiBhbnlbXSkgPT4gUHJvbWlzZTxhbnk+XG5cbi8qKlxuICogQGRlcHJlY2F0ZWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVByb21pc2U8QyBleHRlbmRzIENhbGxiYWNrRm4+KGZuOiBDKTogW1VzZVByb21pc2UsIENdIHtcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0TG9hZGluZ10gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2lzUmVzb2x2ZWQsIHNldFJlc29sdmVkXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbaXNSZWplY3RlZCwgc2V0UmVqZWN0ZWRdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gUmVhY3QudXNlU3RhdGUobnVsbClcbiAgY29uc3QgW2RhdGEsIHNldERhdGFdID0gUmVhY3QudXNlU3RhdGUobnVsbClcblxuICBjb25zdCBjYWxsOiBhbnkgPSAoLi4ucGFyYW1zOiBhbnkpID0+IHtcbiAgICBzZXRMb2FkaW5nKHRydWUpXG5cbiAgICByZXR1cm4gZm4oLi4ucGFyYW1zKVxuICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgc2V0RGF0YShkYXRhKVxuICAgICAgICBzZXRSZXNvbHZlZCh0cnVlKVxuICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKVxuXG4gICAgICAgIHJldHVybiBkYXRhXG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgc2V0RXJyb3IoZXJyKVxuICAgICAgICBzZXRSZWplY3RlZCh0cnVlKVxuICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKVxuXG4gICAgICAgIHRocm93IGVyclxuICAgICAgfSlcbiAgfVxuXG4gIHJldHVybiBbeyBlcnJvciwgZGF0YSwgaXNMb2FkaW5nLCBpc1Jlc29sdmVkLCBpc1JlamVjdGVkIH0sIGNhbGxdXG59XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidXNlU3RhdGUiLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlQ2FsbGJhY2siLCJ1c2VQcm9taXNlIiwiZm4iLCJpc0xvYWRpbmciLCJzZXRMb2FkaW5nIiwiaXNSZXNvbHZlZCIsInNldFJlc29sdmVkIiwiaXNSZWplY3RlZCIsInNldFJlamVjdGVkIiwiZXJyb3IiLCJzZXRFcnJvciIsImRhdGEiLCJzZXREYXRhIiwiY2FsbCIsInBhcmFtcyIsInRoZW4iLCJjYXRjaCIsImVyciIsImpzeCIsImNyZWF0ZUF1dGhDb250ZXh0IiwiQXV0aENvbnRleHQiLCJBdXRoUHJvdmlkZXIiLCJyZWZldGNoVXNlck9uV2luZG93Rm9jdXMiLCJvblJlc3RvcmVBdXRoU3RhdGUiLCJvbkxvYWRVc2VyIiwiUHJvbWlzZSIsInJlc29sdmUiLCJvblNpZ251cCIsIm9uTG9naW4iLCJvblZlcmlmeU90cCIsIm9uTG9nb3V0Iiwib25BdXRoU3RhdGVDaGFuZ2UiLCJvbkdldFRva2VuIiwib25SZXNldFBhc3N3b3JkIiwib25VcGRhdGVQYXNzd29yZCIsImNoaWxkcmVuIiwiaXNBdXRoZW50aWNhdGVkIiwic2V0QXV0aGVudGljYXRlZCIsInVzZXIiLCJzZXRVc2VyIiwicmVzdG9yZVJlZiIsInVzZVJlZiIsImlzRmV0Y2hpbmdSZWYiLCJ1bnN1YnNjcmliZSIsInJlc3RvcmVTdGF0ZSIsImN1cnJlbnQiLCJsb2FkVXNlciIsIm9uV2luZG93Rm9jdXMiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInNpZ25VcCIsIm9wdGlvbnMiLCJyZXN1bHQiLCJsb2dJbiIsImxvZ091dCIsInZlcmlmeU90cCIsInJlc2V0UGFzc3dvcmQiLCJ1cGRhdGVQYXNzd29yZCIsImdldFRva2VuIiwidmFsdWUiLCJpc0xvZ2dpbmdJbiIsIlByb3ZpZGVyIiwidXNlQXV0aCIsImNvbnRleHQiLCJFcnJvciIsInVzZUN1cnJlbnRVc2VyIiwidXNlTG9naW4iLCJhY3Rpb24iLCJhdXRoIiwidXNlU2lnblVwIiwidXNlT3RwIiwidXNlUmVzZXRQYXNzd29yZCIsInVzZVVwZGF0ZVBhc3N3b3JkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@saas-ui+auth-provider@1.2.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@saas-ui/auth-provider/dist/index.mjs\n");

/***/ })

};
;